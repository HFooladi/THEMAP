[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "THEMAP"
dynamic = ["version"]
authors = [
  {name="Hosein Fooladi", email="fooladi.hosein@gmail.com"}
]
description = "Package for task hardness estimation for molecular activity prediction"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "numpy",
    "pandas",
    "matplotlib",
    "seaborn",
    "scikit-learn",
    "dpu-utils>=0.2.13",
    "rdkit",
    "datamol",
    "tqdm",
    "adjustText",
    "h5py",
    "pytz",
    "pydantic",
    "chembl-webresource-client",
    "biopython",
]

[project.optional-dependencies]
# Core ML functionality
ml = [
  "torch==2.4.0",
  "torchvision==0.19.0",
  "torchaudio==2.4.0",
  "molfeat==0.11.0",
  "dgl<=2.0",
  "dgllife>=0.3.2",
  "pytorch_geometric",
  "fcd_torch",
]

# Protein analysis
protein = [
  "biopython",
  "esm",
  "sentence-transformers",
]

# Optimal transport distances
otdd = [
  "torch==2.4.0",
  "torchvision==0.19.0",
  "torchaudio==2.4.0",
  "pot",
  "pykeops",
  "geomloss",
  "opentsne",
  "munkres",
]

# All features
all = [
  "torch==2.4.0",
  "torchvision==0.19.0",
  "torchaudio==2.4.0",
  "molfeat==0.11.0",
  "dgl<=2.0",
  "dgllife>=0.3.2",
  "pytorch_geometric",
  "fcd_torch",
  "biopython",
  "esm",
  "pot",
  "pykeops",
  "geomloss",
  "opentsne",
  "munkres",
  "sentence-transformers",
]

test = [
  "pytest>=6.0",
  "pytest-dotenv",
  "pytest-cov",
  "pytest-timeout",
  "pytest-xdist",
]

dev = [
  "ruff==0.12.9",
  "mypy==1.17.0",
  "pre-commit",
  "jupyterlab",
  "nbconvert",
  "ipywidgets",
  "isort",
  "celluloid",
  "ipycache",
  "watermark",
]

docs = [
  "mkdocs",
  "mkdocs-material>=7.1.1",
  "mkdocs-material-extensions",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-jupyter",
  "markdown-include",
  "mdx_truly_sane_lists",
  "nbconvert",
  "mike>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/HFooladi/THEMAP"
"Bug Tracker" = "https://github.com/HFooladi/THEMAP/issues"

[project.readme]
file="README.md"
content-type = "text/markdown"

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata.hooks.vcs]
version-file = "themap/_version.py"
tag-pattern = "v[0-9]*"

[tool.hatch.build.targets.wheel]
packages = ["themap"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "tests/",
    "*.pyc",
]

[tool.ruff]
# Enable auto-fixing
fix = true

# Set line length
line-length = 110

# Set target version
target-version = "py310"

# Select rule codes to enforce. "E" and "F" are defaults. Add "I" for import sorting.
# You can add more codes like "B" (flake8-bugbear) or "C4" (flake8-comprehensions) etc.
[tool.ruff.lint]

select = ["E", "F", "W", "I"] # W = warnings, I = isort
ignore = ["E501"] # Line length handled by formatter


[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Use spaces around operators
indent-style = "space"
# Respect magic trailing commas
skip-magic-trailing-comma = false
# Line length matches linting
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401", # imported but unused
    "E402", # Module level import not at top of file
]


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output options
addopts = [
    "-v",                    # Verbose output
    "--tb=short",           # Short traceback format
    "--strict-markers",     # Require markers to be defined
    "--color=yes",          # Colored output
    "--durations=10",       # Show 10 slowest tests
    "--disable-warnings",   # Disable warnings in output
]

# Markers for test categorization
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for component interactions",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: Tests requiring GPU hardware",
    "network: Tests requiring network access",
    "serial: Tests that must run serially",
]

# Warning filters
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::FutureWarning:torch.*",
    "ignore::UserWarning:scipy.*",
    "ignore::UserWarning:rdkit.*",
]

[tool.coverage.run]
source = ["themap/"]
disable_warnings = ["no-data-collected"]
data_file = ".coverage/coverage"

[tool.coverage.report]
omit = ["themap/__init__.py"]

[tool.coverage.xml]
output = "coverage.xml"

[tool.mypy]
python_version = "3.10"

[[tool.mypy.overrides]]
module = [
    "rdkit.*",
    "datamol.*",
    "molfeat.*",
    "dpu_utils.*",
    "themap.models.otdd.*",
    "tests.*",
]
ignore_missing_imports = true
